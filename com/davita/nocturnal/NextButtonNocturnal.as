package com.davita.nocturnal{	import flash.display.*;	import flash.events.*;	import com.greensock.TimelineLite;	import com.greensock.TweenLite;	import com.greensock.plugins.TweenPlugin; 	import com.greensock.plugins.AutoAlphaPlugin; 	TweenPlugin.activate([AutoAlphaPlugin]);	/**	 * ...	 * @author Ian Kennedy	 */	public class NextButtonNocturnal extends MovieClip	{		//---------------------------------------		// PRIVATE VARIABLES		//---------------------------------------		private var __gameFile:Object;		private var __nextButtonState:String;		/*			TODO Implement __nextButtonState goes to __gameFile.frameLabel		*/		//---------------------------------------		// CONSTRUCTOR		//---------------------------------------				// on instantiation, the NextButtonNocturnal can be passed a frameLabel		/*			TODO remove set frameLabel from constructor and move them into getter setters		*/		public function NextButtonNocturnal():void		{			if (stage)			{				init();			}			else			{				addEventListener(Event.ADDED_TO_STAGE,init);			}		}						//---------------------------------------		// PRIVATE METHODS		//---------------------------------------		private function init(e:Event=null):void		{			removeEventListener(Event.ADDED_TO_STAGE,init);			this.alpha = 0;			// find CourseFileNocturnalGame			var success:Boolean = findGameFile();			if(success)			{				// set up NextButtonNocturnal properties				new TweenLite(this, 2, {autoAlpha:1});				this.buttonMode = true;				this.useHandCursor = true;				this.addEventListener(MouseEvent.CLICK, nextButtonClickHandler);			}		}        private function findGameFile():Boolean        {            var curParent:DisplayObjectContainer = this.parent;            while (curParent)             {                 if (curParent.hasOwnProperty("points"))                 {                     __gameFile = curParent;					trace("NextButtonNocturnal::findGameFile():gamefile found");                    return true;                }                curParent = curParent.parent;            }			trace("NextButtonNocturnal::findGameFile():gamefile not found");            return false;        }				private function nextButtonClickHandler(event:MouseEvent):void		{			trace("NextButtonNocturnal::nextButtonClickHandler()");			this.removeEventListener(MouseEvent.CLICK, nextButtonClickHandler);			var timeline:TimelineLite = new TimelineLite({onComplete:continueGame});			timeline.append(new TweenLite(this, 1, {x:"+100",autoAlpha:0}));		}				private function continueGame():void		{			this.__gameFile.play();		}		//---------------------------------------		// PUBLIC METHODS		//---------------------------------------			}}